{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "data-factory-28022000"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"FileServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer'"
		},
		"Files_check_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Files_check'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://praveengk.dfs.core.windows.net/"
		},
		"AzureDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1015-184353-6fru9vri"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://Key-valult-demo.vault.azure.net/"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "dataengineerlearnazurepyspark.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Data_Engineer"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Praveen"
		},
		"FileServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\geeka\\Downloads\\data"
		},
		"FileServer_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "geeka"
		},
		"AzureSqlDatabase_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/785ad240-71ab-4a22-8360-a75950bd730f/resourceGroups/DataEngineer-Projects/providers/Microsoft.Sql/servers/dataengineerlearnazurepyspark"
		},
		"AzureSqlDatabase_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"AzureSqlDatabase_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"dataengineerlearnazurepyspark.database.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Batch_Load_Generation_onpremise')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Valid_File_Generation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "onpremise_To_datalakestorage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Valid_File_Generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "onpremise_To_datalakestorage",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "onpremise_To_datalakestorage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-25T11:33:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Valid_File_Generation')]",
				"[concat(variables('factoryId'), '/pipelines/onpremise_To_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Batch_load_Databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Storage_load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "onpremise_To_datalakestorage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "valid_files",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Storage_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Valid_File_Databricks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-25T11:32:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/onpremise_To_datalakestorage')]",
				"[concat(variables('factoryId'), '/pipelines/Valid_File_Databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/File_Trackingg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Files_Name",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "onpremise_to_storage_connections_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Load_files_name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "source_files_name",
							"value": {
								"value": "@join(variables('Files'),'|')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Files_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Files_Name').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Files_name_load",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Files": {
						"type": "Array"
					},
					"source_files_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-24T05:54:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onpremise_to_storage_connections_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Valid_File_Databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Source_path_mounting",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/valid_file (Bronze to silver)/mount_configuration"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "valid_file_sim_contract",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Source_path_mounting",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/valid_file (Bronze to silver)/Valid_File_Contract"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "valid_file_sim_connection",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Source_path_mounting",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/valid_file (Bronze to silver)/Valid_File_Connection"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-25T11:30:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Valid_File_Generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "m_valid_connection_file",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "m_valid_connection_file",
								"type": "DataFlowReference",
								"parameters": {
									"parameter": "'7'"
								},
								"datasetParameters": {
									"connectionsource": {},
									"connectionvalidfile": {},
									"connectionerror": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "m_valid_contract_file",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "m_valid_contract_file",
								"type": "DataFlowReference",
								"parameters": {
									"parameter": "'7'"
								},
								"datasetParameters": {
									"contractsource": {},
									"contractvalidfile": {},
									"contracterror": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-25T11:33:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/m_valid_connection_file')]",
				"[concat(variables('factoryId'), '/dataflows/m_valid_contract_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremise_To_datalakestorage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sim_connection",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": "C:\\Users\\geeka\\Downloads\\data",
									"wildcardFileName": "simconnection*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MOBILE_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MOBILE_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONNECTION_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CONNECTION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORDER_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORDER_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "onpremise_to_storage_connections_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "onpremise_to_storage_connections_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sim_contract",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sim_connection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": "C:\\Users\\geeka\\Downloads\\data",
									"wildcardFileName": "simcontract*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CONTRACT_STARTDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CONTRACT_STARTDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONTRACT_ENDDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CONTRACT_ENDDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORDER_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORDER_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONTRACT_MONTHS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CONTRACT_MONTHS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MOBILE_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MOBILE_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "onpremise_to_storage_contract_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "onpremise_to_storage_contract_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-25T11:31:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onpremise_to_storage_connections_source')]",
				"[concat(variables('factoryId'), '/datasets/onpremise_to_storage_connections_target')]",
				"[concat(variables('factoryId'), '/datasets/onpremise_to_storage_contract_source')]",
				"[concat(variables('factoryId'), '/datasets/onpremise_to_storage_contract_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/error_data_connection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "NAME",
						"type": "varchar"
					},
					{
						"name": "MOBILE_NUMBER",
						"type": "varchar"
					},
					{
						"name": "CONNECTION_DATE",
						"type": "varchar"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "varchar"
					},
					{
						"name": "SOURCE_FILE_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "error_data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/error_data_contract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CONTRACT_STARTDATE",
						"type": "varchar"
					},
					{
						"name": "CONTRACT_ENDDATE",
						"type": "varchar"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "varchar"
					},
					{
						"name": "CONTRACT_MONTHS",
						"type": "varchar"
					},
					{
						"name": "MOBILE_NUMBER",
						"type": "varchar"
					},
					{
						"name": "SOURCE_FILE_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "error_data_contract"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremise_to_storage_connections_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "MOBILE_NUMBER",
						"type": "String"
					},
					{
						"name": "CONNECTION_DATE",
						"type": "String"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremise_to_storage_connections_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Source_Files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CONTRACT_STARTDATE",
						"type": "String"
					},
					{
						"name": "CONTRACT_ENDDATE",
						"type": "String"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "String"
					},
					{
						"name": "CONTRACT_MONTHS",
						"type": "String"
					},
					{
						"name": "MOBILE_NUMBER",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremise_to_storage_contract_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremise_to_storage_contract_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Source_Files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/valid_file_connection_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Source_Files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "MOBILE_NUMBER",
						"type": "String"
					},
					{
						"name": "CONNECTION_DATE",
						"type": "String"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/valid_file_connection_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Valid_Files",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/valid_file_contract_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Source_Files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CONTRACT_STARTDATE",
						"type": "String"
					},
					{
						"name": "CONTRACT_ENDDATE",
						"type": "String"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "String"
					},
					{
						"name": "CONTRACT_MONTHS",
						"type": "String"
					},
					{
						"name": "MOBILE_NUMBER",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/valid_file_contract_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Valid_Files",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1840196645784465.5.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "tokenfordatabricks"
					},
					"existingClusterId": "[parameters('AzureDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Files_check')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Files_check_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 2,
							"numberOfExternalNodes": 2
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_valid_connection_file')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "valid_file_connection_source",
								"type": "DatasetReference"
							},
							"name": "connectionsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "valid_file_connection_target",
								"type": "DatasetReference"
							},
							"name": "connectionvalidfile"
						},
						{
							"dataset": {
								"referenceName": "error_data_connection",
								"type": "DatasetReference"
							},
							"name": "connectionerror"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "split1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter as string ('7')",
						"}",
						"source(output(",
						"          ID as string,",
						"          NAME as string,",
						"          MOBILE_NUMBER as string,",
						"          CONNECTION_DATE as string,",
						"          ORDER_NUMBER as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['Source_Files','pre-run_temp'],",
						"     rowUrlColumn: 'SOURCE_NAME',",
						"     wildcardPaths:['Source_Files/simconnection*.csv']) ~> connectionsource",
						"connectionsource derive(VALID_FLAG = iif(startsWith(MOBILE_NUMBER,$parameter),1,0),",
						"          SOURCE_FILE_NAME = split(SOURCE_NAME, '/')[size(split(SOURCE_NAME, '/'))]) ~> derivedColumn",
						"select1 split(VALID_FLAG==1,",
						"     disjoint: false) ~> split1@(validdate, errordata)",
						"derivedColumn select(mapColumn(",
						"          ID,",
						"          NAME,",
						"          MOBILE_NUMBER,",
						"          CONNECTION_DATE,",
						"          ORDER_NUMBER,",
						"          SOURCE_FILE_NAME,",
						"          VALID_FLAG",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> select1",
						"split1@validdate sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     partitionFileNames:['valid_connection_file'],",
						"     umask: 0666,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ID,",
						"          NAME,",
						"          MOBILE_NUMBER,",
						"          CONNECTION_DATE,",
						"          ORDER_NUMBER,",
						"          SOURCE_FILE_NAME",
						"     ),",
						"     partitionBy('hash', 1)) ~> connectionvalidfile",
						"split1@errordata sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          ID as string,",
						"          NAME as string,",
						"          MOBILE_NUMBER as string,",
						"          CONNECTION_DATE as string,",
						"          ORDER_NUMBER as string,",
						"          SOURCE_FILE_NAME as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          CONNECTION_DATE,",
						"          NAME,",
						"          MOBILE_NUMBER,",
						"          ORDER_NUMBER,",
						"          SOURCE_FILE_NAME",
						"     )) ~> connectionerror"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/valid_file_connection_source')]",
				"[concat(variables('factoryId'), '/datasets/valid_file_connection_target')]",
				"[concat(variables('factoryId'), '/datasets/error_data_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_valid_contract_file')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "valid_file_contract_source",
								"type": "DatasetReference"
							},
							"name": "contractsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "valid_file_contract_target",
								"type": "DatasetReference"
							},
							"name": "contractvalidfile"
						},
						{
							"dataset": {
								"referenceName": "error_data_contract",
								"type": "DatasetReference"
							},
							"name": "contracterror"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "split1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter as string ('7')",
						"}",
						"source(output(",
						"          CONTRACT_STARTDATE as string,",
						"          CONTRACT_ENDDATE as string,",
						"          ORDER_NUMBER as string,",
						"          CONTRACT_MONTHS as string,",
						"          MOBILE_NUMBER as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['Source_Files','pre-run_temp'],",
						"     rowUrlColumn: 'SOURCE_NAME',",
						"     wildcardPaths:['Source_Files/simcontract*.csv']) ~> contractsource",
						"contractsource derive(VALID_FLAG = iif(startsWith(MOBILE_NUMBER,$parameter),1,0),",
						"          SOURCE_FILE_NAME = split(SOURCE_NAME, '/')[size(split(SOURCE_NAME, '/'))]) ~> derivedColumn",
						"select1 split(VALID_FLAG==1,",
						"     disjoint: false) ~> split1@(validdate, errordata)",
						"derivedColumn select(mapColumn(",
						"          CONTRACT_STARTDATE,",
						"          CONTRACT_ENDDATE,",
						"          ORDER_NUMBER,",
						"          CONTRACT_MONTHS,",
						"          MOBILE_NUMBER,",
						"          SOURCE_FILE_NAME,",
						"          VALID_FLAG",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> select1",
						"split1@validdate sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     partitionFileNames:['valid_contract_file'],",
						"     umask: 0666,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     mapColumn(",
						"          CONTRACT_STARTDATE,",
						"          CONTRACT_ENDDATE,",
						"          ORDER_NUMBER,",
						"          CONTRACT_MONTHS,",
						"          MOBILE_NUMBER,",
						"          SOURCE_FILE_NAME",
						"     ),",
						"     partitionBy('hash', 1)) ~> contractvalidfile",
						"split1@errordata sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          CONTRACT_STARTDATE as string,",
						"          CONTRACT_ENDDATE as string,",
						"          ORDER_NUMBER as string,",
						"          CONTRACT_MONTHS as string,",
						"          MOBILE_NUMBER as string,",
						"          SOURCE_FILE_NAME as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CONTRACT_STARTDATE,",
						"          CONTRACT_ENDDATE,",
						"          ORDER_NUMBER,",
						"          CONTRACT_MONTHS,",
						"          MOBILE_NUMBER,",
						"          SOURCE_FILE_NAME",
						"     )) ~> contracterror"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/valid_file_contract_source')]",
				"[concat(variables('factoryId'), '/datasets/valid_file_contract_target')]",
				"[concat(variables('factoryId'), '/datasets/error_data_contract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSqlDatabase_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSqlDatabase_properties_groupId')]",
				"fqdns": "[parameters('AzureSqlDatabase_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}